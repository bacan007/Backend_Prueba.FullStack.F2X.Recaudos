//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Prueba.FullStack.F2X.Recaudos.Datos.ORM
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RecaudosEntities : DbContext
    {
        public RecaudosEntities()
            : base("name=RecaudosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int SP_InsertRecaudos(string estacion, string sentido, Nullable<int> hora, string categoria, Nullable<int> cantidad, Nullable<decimal> valorTabulado, Nullable<System.DateTime> fechaConsulta)
        {
            var estacionParameter = estacion != null ?
                new ObjectParameter("Estacion", estacion) :
                new ObjectParameter("Estacion", typeof(string));
    
            var sentidoParameter = sentido != null ?
                new ObjectParameter("Sentido", sentido) :
                new ObjectParameter("Sentido", typeof(string));
    
            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(int));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var valorTabuladoParameter = valorTabulado.HasValue ?
                new ObjectParameter("ValorTabulado", valorTabulado) :
                new ObjectParameter("ValorTabulado", typeof(decimal));
    
            var fechaConsultaParameter = fechaConsulta.HasValue ?
                new ObjectParameter("FechaConsulta", fechaConsulta) :
                new ObjectParameter("FechaConsulta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertRecaudos", estacionParameter, sentidoParameter, horaParameter, categoriaParameter, cantidadParameter, valorTabuladoParameter, fechaConsultaParameter);
        }
    
        public virtual int SP_TruncateRecaudos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TruncateRecaudos");
        }
    
        public virtual ObjectResult<RecaudosList> SP_GetRecaudos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecaudosList>("SP_GetRecaudos");
        }
    
        public virtual ObjectResult<string> SP_InsertarToken()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_InsertarToken");
        }
    
        public virtual ObjectResult<ValidaToken> SP_ValidarToken(string token)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidaToken>("SP_ValidarToken", tokenParameter);
        }
    
        public virtual ObjectResult<ReporteValorTabulado> SP_ReporteValorTabulado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteValorTabulado>("SP_ReporteValorTabulado");
        }
    }
}
